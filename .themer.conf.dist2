<?php

// Configurable way to handle Themer

$markdowns = [
    'Setup' => [
        'Installation'  => __DIR__.'/tests/slayer-doc/setup/installation.md',
        'Configuration' => __DIR__.'/tests/slayer-doc/setup/configuration.md',
    ],
    'Modular-MVC' => [
        'Module'        => __DIR__.'/tests/slayer-doc/mmvc/module.md',
        'Controller'    => __DIR__.'/tests/slayer-doc/mmvc/controller.md',
        'View'          => __DIR__.'/tests/slayer-doc/mmvc/view.md',
        'Model'         => __DIR__.'/tests/slayer-doc/mmvc/model.md',
    ],
    'Supporting Structure' => [
        'Error Handler'    => __DIR__.'/tests/slayer-doc/supporting_structure/error_handler.md',
        'Routing'          => __DIR__.'/tests/slayer-doc/supporting_structure/routing.md',
        'Sandbox'          => __DIR__.'/tests/slayer-doc/supporting_structure/sandbox.md',
        'Service Provider' => __DIR__.'/tests/slayer-doc/supporting_structure/service_provider.md',
        'Storage'          => [
            'Cache'      => __DIR__.'/tests/slayer-doc/supporting_structure/storage/cache.md',
            'Logging'    => __DIR__.'/tests/slayer-doc/supporting_structure/storage/logging.md',
            'Session'    => __DIR__.'/tests/slayer-doc/supporting_structure/storage/session.md',
            'Views'      => __DIR__.'/tests/slayer-doc/supporting_structure/storage/views.md',
            'Web Server' => __DIR__.'/tests/slayer-doc/supporting_structure/storage/web_server.md',
        ],
        'Unit Testing'     => __DIR__.'/tests/slayer-doc/supporting_structure/unit_testing.md',
        'Validator'        => __DIR__.'/tests/slayer-doc/supporting_structure/validator.md',
    ],
    'Services' => [
        'Access Control Lists' => __DIR__.'/tests/slayer-doc/services/acl.md',
        'Aliases'              => __DIR__.'/tests/slayer-doc/services/aliases.md',
        'Auth'                 => __DIR__.'/tests/slayer-doc/services/auth.md',
        'Cache'                => __DIR__.'/tests/slayer-doc/services/cache.md',
        'DB'                   => __DIR__.'/tests/slayer-doc/services/db.md',
        'Dispatcher'           => __DIR__.'/tests/slayer-doc/services/dispatcher.md',
        'Filter'               => __DIR__.'/tests/slayer-doc/services/filter.md',
        'Flash'                => __DIR__.'/tests/slayer-doc/services/flash.md',
        'FlashBag'             => __DIR__.'/tests/slayer-doc/services/flash_bag.md',
        'Flysystem'            => __DIR__.'/tests/slayer-doc/services/flysystem.md',
        'Lang'                 => __DIR__.'/tests/slayer-doc/services/lang.md',
        'Log'                  => __DIR__.'/tests/slayer-doc/services/log.md',
        'Mail'                 => __DIR__.'/tests/slayer-doc/services/mail.md',
        // 'Metadata Adapter'  => __DIR__.'/tests/slayer-doc/services/metadata_adapter.md',
        'Mongo'                => __DIR__.'/tests/slayer-doc/services/mongo.md',
        'Redirect'             => __DIR__.'/tests/slayer-doc/services/redirect.md',
        'Request'              => __DIR__.'/tests/slayer-doc/services/request.md',
        'Response'             => __DIR__.'/tests/slayer-doc/services/response.md',
        'Router'               => __DIR__.'/tests/slayer-doc/services/router.md',
        'Session'              => __DIR__.'/tests/slayer-doc/services/session.md',
        'URL'                  => __DIR__.'/tests/slayer-doc/services/url.md',
        'View'                 => __DIR__.'/tests/slayer-doc/services/view.md',
    ],
    'Misc.' => [
        'Brood Console' => __DIR__.'/tests/slayer-doc/misc/brood_console.md',
        'Database' => [
            'Factories'  => __DIR__.'/tests/slayer-doc/misc/database/factories.md',
            'Migrations' => __DIR__.'/tests/slayer-doc/misc/database/migrations.md',
        ],
        'Coding Style'   => __DIR__.'/tests/slayer-doc/misc/coding-style.md',
    ],
];

file_exists($autoload = __DIR__.'/../vendor/autoload.php')
    ? require $autoload
    : require __DIR__.'/vendor/autoload.php';

use PhpPure\Themer\Factory;

$instance = new Factory($markdowns, [
    'base_title'   => 'Solid Layer Documentation',
    'landing_page' => $markdowns['Setup']['Installation'],
]);

$instance->generate($folder = 'generated');

return $instance;
